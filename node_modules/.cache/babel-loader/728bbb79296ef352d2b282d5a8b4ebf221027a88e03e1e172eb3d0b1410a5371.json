{"ast":null,"code":"import SpotifyWebApi from \"spotify-web-api-js\";\n//function below this point\n/**\n * Args: mood, an array of songs\n * Returns: an array of songs that will be the * playlist\n */\n\nconst SPOTIFY_ACCESS_TOKEN = \"BQCTWoZb0fFcCPQGWy5zy9aAfKRehhTP1obWtHmDiTE-OXETKJ6ZjdrjB50fgJJHsMva-2RqIdg1G_GGwcKVesGsm-Nd7X65Dz2_uT1z075mFWHu7losmtRiEnac8lWX7vWTRuGjHXwQLmh8IyfIIlE7k_FNtpePRjx1SAasCelin_jsXxm8uJeVx7Cvi5r1x9tz\";\nconst SPOTIFY_API = new SpotifyWebApi();\nSPOTIFY_API.setAccessToken(SPOTIFY_ACCESS_TOKEN);\nexport async function makeDecision(mood) {\n  let allTracks = await getTracksFromFeaturedPlaylists();\n  const trackIDs = allTracks.map(track => track.id);\n  console.log(\"trackIDs\", trackIDs);\n  const IDs = await getSongBasedOnMood(mood, trackIDs.slice(0, 100).join());\n  const IDs2 = await getSongBasedOnMood(mood, trackIDs.slice(100, 200).join());\n  const IDs3 = await getSongBasedOnMood(mood, trackIDs.slice(200, 300).join());\n  const IDs4 = await getSongBasedOnMood(mood, trackIDs.slice(300, 400).join());\n  const IDs5 = await getSongBasedOnMood(mood, trackIDs.slice(400, 500).join());\n  const IDs6 = await getSongBasedOnMood(mood, trackIDs.slice(500, 600).join());\n  const res = [...IDs, ...IDs2, ...IDs3, ...IDs4, ...IDs5, ...IDs6];\n  console.log(\"***\", res);\n  return (await SPOTIFY_API.getTracks(res)).tracks;\n}\nasync function getSongBasedOnMood(mood, trackIDs) {\n  const features = await SPOTIFY_API.getAudioFeaturesForTracks(trackIDs);\n  console.log(\"*features\", features);\n\n  // mood = \"happy\";\n  const matchedTracks = features.audio_features.map(feature => {\n    const {\n      valence,\n      energy,\n      danceability\n    } = feature;\n    if (mood == \"angry\") {\n      if (valence <= 0.4 && energy >= 0.7 && danceability <= 0.4) {\n        return feature.id;\n      }\n    } else if (mood == \"sad\") {\n      if (valence <= 0.4 && energy <= 0.4 && danceability <= 0.4) {\n        return feature.id;\n      }\n    } else if (mood == \"neutral\") {\n      if (valence <= 0.7 && valence >= 0.4 && energy <= 0.7 && energy >= 0.4 && danceability <= 0.7 && energy >= 0.4) {\n        return feature.id;\n      }\n    } else if (mood == \"happy\") {\n      if (valence >= 0.5 && energy >= 0.6 && danceability >= 0.6) {\n        return feature.id;\n      }\n    } else if (mood == \"fearful\") {\n      if (valence >= 0.4 && valence <= 0.7 && energy >= 0.5 && energy <= 0.8 && danceability <= 0.4) {\n        return feature.id;\n      }\n    } else if (mood == \"surprised\") {\n      if (valence >= 0.7 && energy >= 0.7 && danceability >= 0.4 && danceability <= 0.7) {\n        return feature.id;\n      }\n    }\n  });\n  return matchedTracks.filter(e => e);\n}\nexport async function getTracksFromFeaturedPlaylists() {\n  const featuredPlaylist = (await SPOTIFY_API.getFeaturedPlaylists()).playlists.items;\n  const featuredPlaylistIDs = featuredPlaylist.map(playlist => playlist.id);\n  const featuredPlaylistTracks = featuredPlaylistIDs.map(async id => {\n    const playlistTracks = (await SPOTIFY_API.getPlaylistTracks(id)).items;\n    return playlistTracks.map(el => el.track);\n  });\n  return (await Promise.all(featuredPlaylistTracks)).flat();\n}","map":{"version":3,"names":["SpotifyWebApi","SPOTIFY_ACCESS_TOKEN","SPOTIFY_API","setAccessToken","makeDecision","mood","allTracks","getTracksFromFeaturedPlaylists","trackIDs","map","track","id","console","log","IDs","getSongBasedOnMood","slice","join","IDs2","IDs3","IDs4","IDs5","IDs6","res","getTracks","tracks","features","getAudioFeaturesForTracks","matchedTracks","audio_features","feature","valence","energy","danceability","filter","e","featuredPlaylist","getFeaturedPlaylists","playlists","items","featuredPlaylistIDs","playlist","featuredPlaylistTracks","playlistTracks","getPlaylistTracks","el","Promise","all","flat"],"sources":["C:/Users/jmoga/Documents/GitHub/moodify-public/src/helpers/decisions.js"],"sourcesContent":["import SpotifyWebApi from \"spotify-web-api-js\";\n//function below this point\n/**\n * Args: mood, an array of songs\n * Returns: an array of songs that will be the * playlist\n */\n\nconst SPOTIFY_ACCESS_TOKEN =\n  \"BQCTWoZb0fFcCPQGWy5zy9aAfKRehhTP1obWtHmDiTE-OXETKJ6ZjdrjB50fgJJHsMva-2RqIdg1G_GGwcKVesGsm-Nd7X65Dz2_uT1z075mFWHu7losmtRiEnac8lWX7vWTRuGjHXwQLmh8IyfIIlE7k_FNtpePRjx1SAasCelin_jsXxm8uJeVx7Cvi5r1x9tz\";\nconst SPOTIFY_API = new SpotifyWebApi();\nSPOTIFY_API.setAccessToken(SPOTIFY_ACCESS_TOKEN);\n\nexport async function makeDecision(mood) {\n  let allTracks = await getTracksFromFeaturedPlaylists();\n  const trackIDs = allTracks.map(track => track.id);\n  console.log(\"trackIDs\", trackIDs);\n\n  const IDs = await getSongBasedOnMood(mood, trackIDs.slice(0, 100).join());\n  const IDs2 = await getSongBasedOnMood(mood, trackIDs.slice(100, 200).join());\n  const IDs3 = await getSongBasedOnMood(mood, trackIDs.slice(200, 300).join());\n  const IDs4 = await getSongBasedOnMood(mood, trackIDs.slice(300, 400).join());\n  const IDs5 = await getSongBasedOnMood(mood, trackIDs.slice(400, 500).join());\n  const IDs6 = await getSongBasedOnMood(mood, trackIDs.slice(500, 600).join());\n\n  const res = [...IDs, ...IDs2, ...IDs3, ...IDs4, ...IDs5, ...IDs6];\n  console.log(\"***\", res);\n\n  return (await SPOTIFY_API.getTracks(res)).tracks;\n}\n\nasync function getSongBasedOnMood(mood, trackIDs) {\n  const features = await SPOTIFY_API.getAudioFeaturesForTracks(trackIDs);\n  console.log(\"*features\", features);\n\n  // mood = \"happy\";\n  const matchedTracks = features.audio_features.map(feature => {\n    const { valence, energy, danceability } = feature;\n    if (mood == \"angry\") {\n      if (valence <= 0.4 && energy >= 0.7 && danceability <= 0.4) {\n        return feature.id;\n      }\n    } else if (mood == \"sad\") {\n      if (valence <= 0.4 && energy <= 0.4 && danceability <= 0.4) {\n        return feature.id;\n      }\n    } else if (mood == \"neutral\") {\n      if (\n        valence <= 0.7 &&\n        valence >= 0.4 &&\n        energy <= 0.7 &&\n        energy >= 0.4 &&\n        danceability <= 0.7 &&\n        energy >= 0.4\n      ) {\n        return feature.id;\n      }\n    } else if (mood == \"happy\") {\n      if (valence >= 0.5 && energy >= 0.6 && danceability >= 0.6) {\n        return feature.id;\n      }\n    } else if (mood == \"fearful\") {\n      if (\n        valence >= 0.4 &&\n        valence <= 0.7 &&\n        energy >= 0.5 &&\n        energy <= 0.8 &&\n        danceability <= 0.4\n      ) {\n        return feature.id;\n      }\n    } else if (mood == \"surprised\") {\n      if (\n        valence >= 0.7 &&\n        energy >= 0.7 &&\n        danceability >= 0.4 &&\n        danceability <= 0.7\n      ) {\n        return feature.id;\n      }\n    }\n  });\n  return matchedTracks.filter(e => e);\n}\n\nexport async function getTracksFromFeaturedPlaylists() {\n  const featuredPlaylist = (await SPOTIFY_API.getFeaturedPlaylists()).playlists\n    .items;\n\n  const featuredPlaylistIDs = featuredPlaylist.map(playlist => playlist.id);\n\n  const featuredPlaylistTracks = featuredPlaylistIDs.map(async id => {\n    const playlistTracks = (await SPOTIFY_API.getPlaylistTracks(id)).items;\n    return playlistTracks.map(el => el.track);\n  });\n\n  return (await Promise.all(featuredPlaylistTracks)).flat();\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}