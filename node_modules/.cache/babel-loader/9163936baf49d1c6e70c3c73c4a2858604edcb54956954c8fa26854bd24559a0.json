{"ast":null,"code":"import SpotifyWebApi from \"spotify-web-api-js\";\nconst CLIENT_ID = \"d4a40d7f2b794f5ebf8b80bec35da21e\";\nconst CLIENT_SECRET = \"6def9f6a4c7d441d8854a2029a460c7c\";\nvar redirect_uri = \"http://localhost:3000\";\nconst login = () => {\n  var client_id = \"d4a40d7f2b794f5ebf8b80bec35da21e\";\n  var redirect_uri = \"http://localhost:3000\";\n  var state = generateRandomString(16);\n  var scope = \"user-read-private playlist-modify-private playlist-modify-public user-read-email\";\n  var authUrl = new URL(\"https://accounts.spotify.com/authorize\");\n  const params = {\n    response_type: \"code\",\n    client_id: client_id,\n    scope: scope,\n    redirect_uri: redirect_uri,\n    state: state\n  };\n  const toPrint = authUrl.search = new URLSearchParams(params).toString();\n  console.log(toPrint);\n  window.location.href = authUrl.toString();\n\n  //  url += \"?response_type=token\";\n  //  url += \"&client_id=\" + encodeURIComponent(client_id);\n  //  url += \"&scope=\" + encodeURIComponent(scope);\n  //  url += \"&redirect_uri=\" + encodeURIComponent(redirect_uri);\n  //  url += \"&state=\" + encodeURIComponent(state);\n};\n\nfunction generateRandomString(length) {\n  let result = \"\";\n  let characters = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n  let charactersLength = characters.length;\n  for (let i = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return result;\n}\nfunction exchangeForToken() {\n  let params = new URLSearchParams(window.location.search);\n  var code = params.get(\"code\");\n  var state = params.get(\"state\");\n  console.log(\"code\", code);\n  console.log(\"state\", state);\n  fetch(\"https://accounts.spotify.com/api/token\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/x-www-form-urlencoded\",\n      Authorization: \"Basic \" + btoa(CLIENT_ID + \":\" + CLIENT_SECRET)\n    },\n    body: new URLSearchParams({\n      code: code,\n      redirect_uri: redirect_uri,\n      grant_type: \"authorization_code\"\n    })\n  }).then(response => response.json()).then(data => console.log(data)).catch(error => console.error(\"Error:\", error));\n}\nconst loginProcess = {\n  login,\n  exchangeForToken,\n  generateRandomString\n};\nexport default loginProcess;\n\n// https://accounts.spotify.com/authorize?response_type=token&client_id=d4a40d7f2b794f5ebf8b80bec35da21e&scope=user-read-private&redirect_uri=http://localhost:3000\n\n// export default login;","map":{"version":3,"names":["SpotifyWebApi","CLIENT_ID","CLIENT_SECRET","redirect_uri","login","client_id","state","generateRandomString","scope","authUrl","URL","params","response_type","toPrint","search","URLSearchParams","toString","console","log","window","location","href","length","result","characters","charactersLength","i","charAt","Math","floor","random","exchangeForToken","code","get","fetch","method","headers","Authorization","btoa","body","grant_type","then","response","json","data","catch","error","loginProcess"],"sources":["C:/Users/jmoga/Documents/GitHub/moodify-public/moodify-public/src/services/login.js"],"sourcesContent":["import SpotifyWebApi from \"spotify-web-api-js\";\n\nconst CLIENT_ID = \"d4a40d7f2b794f5ebf8b80bec35da21e\";\nconst CLIENT_SECRET = \"6def9f6a4c7d441d8854a2029a460c7c\";\nvar redirect_uri = \"http://localhost:3000\";\n\nconst login = () => {\n   var client_id = \"d4a40d7f2b794f5ebf8b80bec35da21e\";\n   var redirect_uri = \"http://localhost:3000\";\n\n   var state = generateRandomString(16);\n\n   var scope =\n      \"user-read-private playlist-modify-private playlist-modify-public user-read-email\";\n\n   var authUrl = new URL(\"https://accounts.spotify.com/authorize\");\n\n   const params = {\n      response_type: \"code\",\n      client_id: client_id,\n      scope: scope,\n      redirect_uri: redirect_uri,\n      state: state,\n   };\n\n   const toPrint = (authUrl.search = new URLSearchParams(params).toString());\n   console.log(toPrint);\n   window.location.href = authUrl.toString();\n\n   //  url += \"?response_type=token\";\n   //  url += \"&client_id=\" + encodeURIComponent(client_id);\n   //  url += \"&scope=\" + encodeURIComponent(scope);\n   //  url += \"&redirect_uri=\" + encodeURIComponent(redirect_uri);\n   //  url += \"&state=\" + encodeURIComponent(state);\n};\n\nfunction generateRandomString(length) {\n   let result = \"\";\n   let characters =\n      \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n   let charactersLength = characters.length;\n   for (let i = 0; i < length; i++) {\n      result += characters.charAt(Math.floor(Math.random() * charactersLength));\n   }\n   return result;\n}\n\nfunction exchangeForToken() {\n   let params = new URLSearchParams(window.location.search);\n\n   var code = params.get(\"code\");\n   var state = params.get(\"state\");\n   console.log(\"code\", code);\n   console.log(\"state\", state);\n\n   fetch(\"https://accounts.spotify.com/api/token\", {\n      method: \"POST\",\n      headers: {\n         \"Content-Type\": \"application/x-www-form-urlencoded\",\n         Authorization: \"Basic \" + btoa(CLIENT_ID + \":\" + CLIENT_SECRET),\n      },\n      body: new URLSearchParams({\n         code: code,\n         redirect_uri: redirect_uri,\n         grant_type: \"authorization_code\",\n      }),\n   })\n      .then((response) => response.json())\n      .then((data) => console.log(data))\n      .catch((error) => console.error(\"Error:\", error));\n}\n\nconst loginProcess = {\n   login,\n   exchangeForToken,\n   generateRandomString,\n};\n\nexport default loginProcess;\n\n// https://accounts.spotify.com/authorize?response_type=token&client_id=d4a40d7f2b794f5ebf8b80bec35da21e&scope=user-read-private&redirect_uri=http://localhost:3000\n\n// export default login;\n"],"mappings":"AAAA,OAAOA,aAAa,MAAM,oBAAoB;AAE9C,MAAMC,SAAS,GAAG,kCAAkC;AACpD,MAAMC,aAAa,GAAG,kCAAkC;AACxD,IAAIC,YAAY,GAAG,uBAAuB;AAE1C,MAAMC,KAAK,GAAGA,CAAA,KAAM;EACjB,IAAIC,SAAS,GAAG,kCAAkC;EAClD,IAAIF,YAAY,GAAG,uBAAuB;EAE1C,IAAIG,KAAK,GAAGC,oBAAoB,CAAC,EAAE,CAAC;EAEpC,IAAIC,KAAK,GACN,kFAAkF;EAErF,IAAIC,OAAO,GAAG,IAAIC,GAAG,CAAC,wCAAwC,CAAC;EAE/D,MAAMC,MAAM,GAAG;IACZC,aAAa,EAAE,MAAM;IACrBP,SAAS,EAAEA,SAAS;IACpBG,KAAK,EAAEA,KAAK;IACZL,YAAY,EAAEA,YAAY;IAC1BG,KAAK,EAAEA;EACV,CAAC;EAED,MAAMO,OAAO,GAAIJ,OAAO,CAACK,MAAM,GAAG,IAAIC,eAAe,CAACJ,MAAM,CAAC,CAACK,QAAQ,CAAC,CAAE;EACzEC,OAAO,CAACC,GAAG,CAACL,OAAO,CAAC;EACpBM,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAGZ,OAAO,CAACO,QAAQ,CAAC,CAAC;;EAEzC;EACA;EACA;EACA;EACA;AACH,CAAC;;AAED,SAAST,oBAAoBA,CAACe,MAAM,EAAE;EACnC,IAAIC,MAAM,GAAG,EAAE;EACf,IAAIC,UAAU,GACX,gEAAgE;EACnE,IAAIC,gBAAgB,GAAGD,UAAU,CAACF,MAAM;EACxC,KAAK,IAAII,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,MAAM,EAAEI,CAAC,EAAE,EAAE;IAC9BH,MAAM,IAAIC,UAAU,CAACG,MAAM,CAACC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGL,gBAAgB,CAAC,CAAC;EAC5E;EACA,OAAOF,MAAM;AAChB;AAEA,SAASQ,gBAAgBA,CAAA,EAAG;EACzB,IAAIpB,MAAM,GAAG,IAAII,eAAe,CAACI,MAAM,CAACC,QAAQ,CAACN,MAAM,CAAC;EAExD,IAAIkB,IAAI,GAAGrB,MAAM,CAACsB,GAAG,CAAC,MAAM,CAAC;EAC7B,IAAI3B,KAAK,GAAGK,MAAM,CAACsB,GAAG,CAAC,OAAO,CAAC;EAC/BhB,OAAO,CAACC,GAAG,CAAC,MAAM,EAAEc,IAAI,CAAC;EACzBf,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEZ,KAAK,CAAC;EAE3B4B,KAAK,CAAC,wCAAwC,EAAE;IAC7CC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACN,cAAc,EAAE,mCAAmC;MACnDC,aAAa,EAAE,QAAQ,GAAGC,IAAI,CAACrC,SAAS,GAAG,GAAG,GAAGC,aAAa;IACjE,CAAC;IACDqC,IAAI,EAAE,IAAIxB,eAAe,CAAC;MACvBiB,IAAI,EAAEA,IAAI;MACV7B,YAAY,EAAEA,YAAY;MAC1BqC,UAAU,EAAE;IACf,CAAC;EACJ,CAAC,CAAC,CACEC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK3B,OAAO,CAACC,GAAG,CAAC0B,IAAI,CAAC,CAAC,CACjCC,KAAK,CAAEC,KAAK,IAAK7B,OAAO,CAAC6B,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC,CAAC;AACvD;AAEA,MAAMC,YAAY,GAAG;EAClB3C,KAAK;EACL2B,gBAAgB;EAChBxB;AACH,CAAC;AAED,eAAewC,YAAY;;AAE3B;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}